package com.pack.dao;




import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.pack.HibernateUtil;
import com.pack.model.Customer;

public class CustomerDaoImpl implements CustomerDao  {

	public void insertCustomer(Customer customer) {
		Session s=HibernateUtil.getSessionFactory().openSession();
		Transaction t=null;
		try 
		{
			t=s.beginTransaction();
			s.save(customer);
			t.commit();
		}
		catch (HibernateException e) {
			// TODO: handle exception
			System.out.println("=-=>"+e);
			t.rollback();
			e.printStackTrace();
		}
		finally {
			s.close();
		}
		
	}

	public void upadteCustomer(Customer customer) {
		Session s=HibernateUtil.getSessionFactory().openSession();
		Transaction t=null;
		try 
		{
			t=s.beginTransaction();
//			Customer c=(Customer)s.get(Customer.class, customer.getCustid());
//			if(c!=null) 
//			{
//				c.setAddress(customer.getAddress());
//				c.setAge(customer.getAge());
//				c.setSalery(customer.getSalery());
//				s.update(c);
//			}
//			else 
//			{
//				System.out.println("no customer found");
//			}
			String query="update Customer c set c.address=:add,c.salery=:sal,c.age=:age where c.custid=:cid";
			org.hibernate.Query query2=s.createQuery(query);
			query2.setParameter("cid", customer.getCustid());
			query2.setParameter("add", customer.getAddress());
			query2.setParameter("sal", customer.getSalery());
			query2.setParameter("age", customer.getAge());
			int i=query2.executeUpdate();
			if(i==1) 
			{
				System.out.println("Updated sucessfully");
			}
			t.commit();
			
		}
		catch (HibernateException e) {
			// TODO: handle exception
			System.out.println("=-=>"+e);
			t.rollback();
			e.printStackTrace();
		}
		finally {
			s.close();
		}
		
		
	}

	public void deleteCustomer(int custid) {
		Session s=HibernateUtil.getSessionFactory().openSession();
		Transaction t=null;
		try 
		{
			t=s.beginTransaction();
			Customer c=(Customer)s.get(Customer.class, custid);
			if(c!=null) 
			{
				s.delete(c);
			}
			t.commit();
		}
		catch (HibernateException e) {
			// TODO: handle exception
			System.out.println("=-=>"+e);
			t.rollback();
			e.printStackTrace();
		}
		finally {
			s.close();
		}
	}

	public List<Customer> fetchCustomerID(int custid) {
		Session s=HibernateUtil.getSessionFactory().openSession();
		Transaction t=null;
		List<Customer> c=null;
		try 
		{
			t=s.beginTransaction();
			c=(Customer)s.get(Customer.class, custid);
			t.commit();			
		}
		catch (HibernateException e) {
			// TODO: handle exception
			System.out.println("=-=>"+e);
			t.rollback();
			e.printStackTrace();
		}
		finally {
			s.close();
		}
		
		return c;
	}

}
